{"ast":null,"code":"var _jsxFileName = \"/var/www/React/APOD/APODwebapp/src/views/Login.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Card, Container, Form, Button } from 'react-bootstrap';\nimport '../assets/css/style.css';\nimport Navbars from '../components/Navbars/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = e => {\n      let fields = this.state.fields;\n      fields[e.currentTarget.id] = e.currentTarget.value;\n      this.setState({\n        fields\n      });\n    };\n\n    this.handleOnSubmit = e => {\n      const form = e.currentTarget;\n      e.preventDefault();\n\n      if (form.checkValidity() === true) {\n        //API call to validate user\n        fetch(`http://localhost:3000/api/v1/userAccounts/${this.state.fields.userName}/${this.state.fields.password}`, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"content-type\": \"application/json\",\n            \"accept\": \"application/json\"\n          }\n        }).then(response => response.json()).then(response => {\n          if (response.success) {\n            sessionStorage.setItem('userAccountId', response.obj._id);\n            sessionStorage.setItem('userName', response.obj.userName);\n            console.log('roles', response.obj);\n            sessionStorage.setItem('role', response.obj.roles[0]);\n\n            switch (sessionStorage.getItem('role')) {\n              case \"A\":\n                this.props.history.push('/admin/designsubmissions');\n                break;\n\n              case \"C\":\n                this.props.history.push('/admin/submitdesigns');\n                break;\n\n              case \"W\":\n                this.props.history.push('/admin/jobs');\n                break;\n\n              default:\n                this.props.history.push('/admin/');\n            }\n          } else {\n            console.log(response);\n            alert(\"Invalid Credentials...\");\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n\n      this.setState({\n        validated: true\n      });\n    };\n\n    this.state = {\n      fields: {\n        userName: '',\n        password: ''\n      },\n      validated: false\n    };\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbars, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '22rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"APOD Portal \\u2013 rev 0.0.0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                validated: this.state.validated,\n                onSubmit: e => {\n                  this.handleOnSubmit(e);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Username\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter username\",\n                    id: \"userName\",\n                    name: \"userName\",\n                    value: this.state.fields.userName,\n                    onChange: e => {\n                      this.handleOnChange(e);\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a username.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Password\",\n                    id: \"password\",\n                    name: \"password\",\n                    value: this.state.fields.password,\n                    onChange: e => {\n                      this.handleOnChange(e);\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a password.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  children: \"Sign In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouter(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/var/www/React/APOD/APODwebapp/src/views/Login.js"],"names":["React","Component","withRouter","Card","Container","Form","Button","Navbars","Login","constructor","props","handleOnChange","e","fields","state","currentTarget","id","value","setState","handleOnSubmit","form","preventDefault","checkValidity","fetch","userName","password","then","response","json","success","sessionStorage","setItem","obj","_id","console","log","roles","getItem","history","push","alert","catch","err","validated","bind","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Card, Container, Form, Button } from 'react-bootstrap';\nimport '../assets/css/style.css'\nimport Navbars from '../components/Navbars/Navbar';\n\nclass Login extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            fields: {userName: '', password: ''},\n            validated: false\n        }\n\n        this.handleOnChange = this.handleOnChange.bind(this);\n        this.handleOnSubmit = this.handleOnSubmit.bind(this);\n    }\n\n    handleOnChange = (e) => {\n        let fields = this.state.fields;\n        fields[e.currentTarget.id] = e.currentTarget.value;\n        this.setState({ fields })\n    }\n\n    handleOnSubmit = (e) => {\n        const form = e.currentTarget;\n        e.preventDefault()\n        if (form.checkValidity() === true) {\n            //API call to validate user\n            fetch(`http://localhost:3000/api/v1/userAccounts/${this.state.fields.userName}/${this.state.fields.password}`, {\n                \"method\": \"GET\",\n                \"headers\": {\n                    \"content-type\": \"application/json\",\n                    \"accept\": \"application/json\"\n                }\n            })\n            .then(response => response.json())\n            .then(response => {\n                if(response.success){\n                    sessionStorage.setItem('userAccountId', response.obj._id)\n                    sessionStorage.setItem('userName', response.obj.userName)\n                    console.log('roles', response.obj);\n                    sessionStorage.setItem('role', response.obj.roles[0])\n                    switch (sessionStorage.getItem('role')) {\n                        case \"A\":\n                            this.props.history.push('/admin/designsubmissions')\n                          break;\n                        case \"C\":\n                            this.props.history.push('/admin/submitdesigns')\n                          break;\n                        case \"W\":\n                            this.props.history.push('/admin/jobs')\n                          break;\n                        default:\n                            this.props.history.push('/admin/')\n                    }\n                }else{\n                    console.log(response);\n                    alert(\"Invalid Credentials...\")\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n        }\n        this.setState({validated: true})\n    }\n\n    render(){\n        return(\n            <>\n                <Navbars />\n                <Container fluid>\n                    <div className=\"center\">\n                        <Card style={{ width: '22rem' }}>\n                            <Card.Header>APOD Portal – rev 0.0.0</Card.Header>\n                            <Card.Body>\n                                <Form noValidate validated={this.state.validated} onSubmit={(e) => {this.handleOnSubmit(e)}}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label>Username</Form.Label>\n                                        <Form.Control type=\"text\" placeholder=\"Enter username\" id=\"userName\" name=\"userName\" value={this.state.fields.userName} onChange={(e) => {this.handleOnChange(e)}} required/>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please enter a username.\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" value={this.state.fields.password} onChange={(e) => {this.handleOnChange(e)}} required/>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please enter a password.\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n                                    <Button variant=\"primary\" type=\"submit\">\n                                        Sign In\n                                    </Button>\n                                </Form>\n                            </Card.Body>\n                            {/*<Card.Footer>\n                                New User?\n                                <Button variant=\"link\">Sign Up</Button>\n                            </Card.Footer>*/}\n                        </Card>\n                    </div>\n                </Container>\n            </>\n        )\n    }\n}\n\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}